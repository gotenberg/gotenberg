ARG GOLANG_VERSION=1.24.0
ARG GOTENBERG_VERSION=8.17.1
ARG BASE_IMAGE=harbor.onebrief.tools/cgr.dev/onebrief.com/gotenberg
ARG UNOCONVERTER_BIN_PATH=/usr/bin/unoconv

# ----------------------------------------------
# Gotenberg binary build stage
# ----------------------------------------------
FROM golang:$GOLANG_VERSION AS binary-stage

ARG GOTENBERG_VERSION
ENV CGO_ENABLED=0

# Define the working directory outside of $GOPATH (we're using go modules).
WORKDIR /home

# Install module dependencies.
COPY go.mod go.sum ./

RUN go mod download &&\
  go mod verify

# Copy the source code.
COPY cmd ./cmd
COPY pkg ./pkg

RUN go build -o gotenberg -ldflags "-X 'github.com/gotenberg/gotenberg/v8/cmd.Version=$GOTENBERG_VERSION'" cmd/gotenberg/main.go

# ----------------------------------------------
# Copy binary to chainguard base
# ----------------------------------------------
FROM $BASE_IMAGE:$GOTENBERG_VERSION AS chainguard-base
ARG UNOCONVERTER_BIN_PATH

COPY --from=binary-stage /home/gotenberg /usr/bin/

COPY cve-fixes/cve-2012-5639/registrymodifications.xcu ~/.config/libreoffice/4/user/registrymodifications.xcu

# puts back in these env vars which are seemingly missing in the 8.15.3 chainguard base
# they likely baked them into the code...
ENV CHROMIUM_BIN_PATH=/usr/bin/chromium
ENV LIBREOFFICE_BIN_PATH=/usr/lib/libreoffice/program/soffice.bin
ENV UNOCONVERTER_BIN_PATH=$UNOCONVERTER_BIN_PATH
ENV PDFTK_BIN_PATH=/usr/bin/pdftk
ENV QPDF_BIN_PATH=/usr/bin/qpdf
ENV EXIFTOOL_BIN_PATH=/usr/bin/exiftool
ENV PDFCPU_BIN_PATH=/usr/bin/pdfcpu
